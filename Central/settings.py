"""
Django settings for Central project.

Generated by 'django-admin startproject' using Django 5.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
import dj_database_url
from decouple import config, Csv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY', default='django-insecure-cydu2e)kumbx9)!(is^+%63re*)n%v7%-0(x8yevwg)eq4^gg-')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=True, cast=bool)

ALLOWED_HOSTS = config('ALLOWED_HOSTS', default='localhost,127.0.0.1', cast=Csv())


# Application definition

INSTALLED_APPS = [
    'Usuarios.apps.UsuariosConfig', # cambiada a 'Usuarios' por 'Usuarios.apps.UsuariosConfig' para que se carguen las se√±ales
    'Productos',
    'Ventas',
    'Inventario',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'widget_tweaks', # estilos bootstrap en formularios
]

###### MODELO DE USUARIO PERSONALIZADO
AUTH_USER_MODEL = 'Usuarios.Usuario'   # IMPORTANTE CUANDO USAMOS ABSTRACTUSER DJANGO POR DEFECTO USA 'auth.User' ENTONCES HAY QUE DECIRLE QUE USE NUESTRO MODELO
##############################
LOGIN_URL = '/usuarios/login/'
LOGIN_REDIRECT_URL = '/categorias/'
LOGOUT_REDIRECT_URL = '/usuarios/login/'


# ============================================================
# üìß CONFIGURACI√ìN DE EMAIL (Desarrollo / Producci√≥n)
# ============================================================
# En local puedes usar consola (imprime el correo en terminal)
# En producci√≥n (Render) se usa Gmail u otro SMTP

if config('USE_CONSOLE_EMAIL', default=False, cast=bool):
    EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"
else:
    EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
    EMAIL_HOST = config('EMAIL_HOST', default='smtp.gmail.com')
    EMAIL_PORT = config('EMAIL_PORT', default=587, cast=int)
    EMAIL_USE_TLS = config('EMAIL_USE_TLS', default=True, cast=bool)
    EMAIL_HOST_USER = config('EMAIL_HOST_USER', default='dainerdual@gmail.com')
    EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD', default='uzdk jbal dmgu yqjm')
    DEFAULT_FROM_EMAIL = EMAIL_HOST_USER


# ============================================================
# MIDDLEWARE
# ============================================================

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',  # Permite servir archivos est√°ticos en Render
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Central.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Central.wsgi.application'


# ============================================================
# BASE DE DATOS
# ============================================================
# En desarrollo se usa PostgreSQL local
# En Render se configura autom√°ticamente mediante DATABASE_URL
# ============================================================

if config('RENDER', default=False, cast=bool):
    # üöÄ Configuraci√≥n autom√°tica para Render
    DATABASES = {
        'default': dj_database_url.config(
            default=config('DATABASE_URL'),
            conn_max_age=600,
            ssl_require=True
        )
    }
else:
    # üßë‚Äçüíª Config local
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': config('DB_NAME', default='db_market'),
            'USER': config('DB_USER', default='postgres'),
            'PASSWORD': config('DB_PASSWORD', default='2077'),
            'HOST': config('DB_HOST', default='localhost'),
            'PORT': config('DB_PORT', default='5432'),
        }
    }


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    # {
    #     'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    # },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {
            'min_length': 3,  # Puedes ajustar la longitud m√≠nima seg√∫n tus necesidades
        }
    },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    # },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'es-bo'

TIME_ZONE = 'America/La_Paz'

USE_I18N = True

USE_TZ = True



# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/
# ============================================================
# ARCHIVOS EST√ÅTICOS Y MULTIMEDIA
# ============================================================

# Archivos est√°ticos (CSS, JS, im√°genes de la app)
# https://docs.djangoproject.com/en/5.2/howto/static-files/
STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # necesario para Render

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'


# ============================================================
# üå©Ô∏è CLOUDINARY PARA ARCHIVOS MULTIMEDIA (im√°genes de productos)
# ============================================================

INSTALLED_APPS += [
    'cloudinary',
    'cloudinary_storage',
]

# Almacenamiento de archivos multimedia en Cloudinary
DEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'
MEDIA_URL = '/media/'

# Si deseas seguir usando MEDIA_ROOT localmente (solo en modo desarrollo)
if DEBUG:
    MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# ============================================================
# Default primary key field type
# ============================================================

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'